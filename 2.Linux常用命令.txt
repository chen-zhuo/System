# Linux命令大全

**注意：下面所有命令都是在登录Linux系统里面执行的，系统版本为CentOS。**

**坑：要保证在英文模式下输入命令，而且尽量不要使用小键盘（数字键盘）。**

### 快捷键

```
上键、下键 : 快速调出历史指令
tab键 : 自动补全
cd : 回到家目录
clear : 清除屏幕
ctrl + l : 清除屏幕
ctrl + a : 移动到指令最前
ctrl + e : 移动到指令最后
ctrl + c : 终止当前的进程
Ctrl + D : 退出当前终端，和exit一样。
```

### 用户系统

##### 运行级别

**系统运行级别就是系统使用的功能。**

```
cat /etc/inittab : 在文件中修改系统默认运行级别
id:3:initdefault : 3就代表系统的运行默认级别
init 3 : 设置当前系统运行级别为3
    # 0:关机（不能设为默认级别）
    # 1:单用户（安全模式）
    # 2:不完全多用户，不能用网络
    # 3:多用户
    # 4:未分配
    # 5:图形界面
    # 6:重启（不能设为默认级别）

runlevel：查看系统当前运行级别
```

##### 基本信息

```
超级用户root进入Linux系统：
[root@localhost ~]#
root : 超级管理员，拥有至高无上的权限
localhost : 主机名
~ : 代表的是当前用户的家目录，也表示当前所在位置
# : 代表的意思是超级管理员在执行指令

普通用户bajie进入Linux系统:
[bajie@localhost ~]$
bajie : 用户名
localhost : 主机名
~ : 代表的是当前用户的家目录，也表示当前所在位置
$ : 代表的是普通用户在执行指令
```

##### 管理用户

**Linux是一个多用户系统，可以多用户登录**

**坑：注意设置密码，不要使用小键盘。**

**注意：普通用户只能更改自己的密码，管理员可以更改所有人的密码。**

```
# 查看用户
whoami : 查询自己是谁
who : 查看登录用户（tty本地终端，pts远程终端）
w : 查看登录用户详细信息（IDLE：未操作时间，what：执行的操作）

# 增加用户
useradd sc：添加用户sc（-u UID：手工指定用户的UID号，-G 组名：指定用户的附加组，-g 组名：指定用户的初始组，-c "说明"：添加说明，\：命令太长换行，修改新添加的用户）
passwd sc：超级用户给sc用户设置密码（添加了用户，就要马上设置密码，否则该用户是不完整的。passwd直接回车就是自己设置自己的密码（普通用户、超级用户都可以））

# 锁定、解锁
passwd -l sc : 锁定sc用户，不能登录（这是因为在加密文件的密码前加了！，导致密码失效）
passwd -u sc : 解锁sc用户

# 修改用户信息
usermod : 修改用户信息（-u UID：手工指定用户的UID号，-G 组名：指定用户的附加组，-L：临时锁定用户，-U：解锁用户，修改已存在的用户）
chage : 修改用户密码状态（-l：列出用户的详细密码状态，-I 天数：密码过后宽限天数，-E 日期：账号失效时间，-d：修改密码最后一次更改日期）
chage -d 0 lamp : 将lamp用户的密码修改日期归0，用户一登陆就要修改密码

# 删除用户
userdel -r 用户名 : 删除用户（-r：删除用户的同时删除用户家目录）

# 切换用户
su - user1 : 切换到user1（-：切换用户时，连带用户的环境变量一起切换。命令env就可以查看用户的环境变量）（超级用户切换到普通用户不需要密码，反向切换就要密码，普通用户切换为普通用户要密码）

# 历史信息
last：列出登陆过和在线的用户信息及系统重启信息
lastlog：查看所有用户是否登录的信息
lastlog -u 502：只查看502用户是否的登录信息
```

##### 管理组

**每个用户都有自己的所属组**

```
groupadd 组名 : 添加组
groupmod 组名 : 修改组
groupmod -n testrp group1 : 将组名group1改为testrp
groupdel 组名 : 删除组（组中存在用户，若组是用户的初始组，则不能删除；若是附加组，就能删除）
gpasswd 组名 : 组中添加或删除用户（-a 用户名：向组中添加用户，-d 用户名：在组中删除用户；这些都是附加用户）
id user1：查询user1用户id和组id和在哪些组当中
```

##### 用户配置文件

Linux中主要是通过用户配置文件按来查看和修改用户信息。

```
用户配置文件:/etc/passwd
# 第一字段：用户名称（例：root、bin）
# 第二字段：密码标志（x：用户存在密码（没有密码的用户只能本机登陆，不能远程登陆））
# 第三字段：UID（0：超级用户，1-499：系统用户（伪用户，不能删除），500-65535：普通用户（将UID改为0，就能成为超级用户，改GID没有用））
# 第四字段：GID（用户初始组ID）
# 额外：初始组，用户登录就拥有这个组权限，用户创建就建立并属于同名的初始组，初始组只能有一个。
	   附加组，用户可以加入多个其他的用户组，并拥有这些组的权限，附加组可以有多个。
# 第五字段：用户说明
# 第六字段：家目录（超级用户：/root/，普通用户：/home/用户名/）
# 第七字段：登录之后的shell（shell是Linux的命令解释器）

例子：root:x:0:0:root:/root:/bin/bash（超级用户）
例子：ntp:x:38:38::/etc.ntp:sbin/nologin（伪用户，nologin禁止登录）
例子：lampl:x:503:503::/home/lampl:bin/bash（普通用户，都是在bin/bash才能登陆执行权限，如果将bin/bash改为sbin/nologin就会禁止该用户登录）

# 影子文件：/etc/shadow文件，用来存放加密的密码（只有root能查看）
# 第一字段：用户名
# 第二字段：加密密码（密码是!!或*代表没有密码，不能登陆）
# 第三字段：密码最后一次修改日期（时间戳，1970年1月1号，一天加1）
# 第四字段：两次密码的修改间隔时间（和第三字段比较）
# 第五字段：密码有效期（和第三字段比较）
# 第六字段：密码修改到期前的警告天数（和五字段相比）
# 第七字段：密码过期的宽限天数（0：密码过期失效，-1：密码永不失效）
# 第八字段：账号失效时间（账号有效期，过期失效，设置时间戳表示）
# 第九字段：保留（暂时不用）
# 时间戳换算为时间：date -d "1970-01-01 16076 days"
# 时间换算为时间戳：echo $(($(date --date="2014/01/06" +%s)/86400+1))

# 组信息文件：/etc/group（组影子文件：/etc/gshadow，保存组密码）
# 第一字段：组名
# 第二字段：组密码（x：存在组密码，一般不用）
# 第三字段：GID（组的ID）
# 第四字段：组中附加用户

# 用户家目录
# 超级用户：/root/，所有者和所属组都是root用户，权限是550
# 普通用户：/home/用户名/，所有者和所属组都是此用户，权限是700（普通用户变为超级用户，家目录不会变）
```

### 权限命令

##### 认识权限

**权限是由9个字符组成，每3个字符组成一组，分别代表u（所有者）、g（所属组）、o（其他人）的权限。**

**3个字符分别是r（读取权限）、w（写入权限）、x（执行权限），而且顺序只能是rwx，没有该项权限用 - 表示。**

```
r : 读取权限  查看文件内容  查看目录内容
w : 写入权限  修改文件内容  在目录中创建、删除文件（重点）
x : 执行权限  可以执行文件  可以进入目录

# 用ls -l就可以查看到文件或文件夹的权限
例：-rwxr-x-wx. 5 root root 4096 8月  31 2018 xuexi.log
   - : 代表这是一个文件
   rwx : 代表所有者拥有读、写、执行的权限
   r-x : 代表所属组拥有读、执行的权限
   -w- : 代表其他人拥有写的权限
```

##### 权限更改

**注意：更改文件的权限只能是文件的所有者（文件创建者）或者是root（超级管理员）。**

```
chmod u+x Japan.list : 给Japan.list文件的u（所有者）增加x（执行）权限
chmod g+w,o-r Japan.list : 给Japan.list文件的g（所属组）加w（写权限），给o（其他人）减r（读权限）
chomd g=rwx Japan.list : 给Japan.list文件的g（所属组）设置rwx（所有权限）

# 权限数字表示  r:4  w:2  x:1  rwxrw-r--:764
chomd 764 Japan.list：就将文件改成了上面的权限
chomd -R 777 /tmp/a：将a文件夹下文件及文件夹的权限全部改为777（所有权限）

# 只有管理员可以改变文件的所有者，所有者必须是存在的用户
chown root /tmp/a.file：将a文件的所有者改为root（不管是谁创建的）
# 只有管理员可以改变文件的所属组，所有者必须是存在的所属组
chgrp brother /tmp/a.file：将a文件的所属组更改为brother（不管是谁创建的）

umask -S：显示创建文件夹的默认权限rwxr-xr-x
```

##### sudo权限

```
# 给普通用户赋予超级用户才能执行的命令权限，前提是要root修改sudo命令的配置文件，给出权利才能使用sudo
sudo -l：查看能使用超级管理员才能执行的命令
sudo 命令的绝对路径 命令：执行超级管理员才能执行的命令
sudo /sbin/shtdown -r now：执行这条命令的前提是超级管理员给了这条命令的权限
```

##### ACL权限

ACL权限用于身份不足的情况（即所有者、所属组、其他人，三种情况外）。相当于不给用户添加身份，直接给他权限。

```
df -h：查询系统分区状况

dumpe2fs -h/dev/sda5：查询指定分区详细文件系统信息（sda5就是上面命令查询显示的root分区）（在当中查看Default mount options这行是否有acl，有就表明能开启ACL权限）

mount -o remount,acl/：重新挂载根分区，并加入acl权限（临时挂载）

vim /etc/fstab：修改配置文件（UUID=c2....../ ext4 defaults,acl 1 1）（加入acl,永久挂载）
mount -o remount/：挂在后重启生效
```

##### chattr权限

```
chattr +i 文件或目录：改变文件或目录权限
（+：增加权限，-：删除权限，=：等于某权限）
（i：锁住文件，不能对文件删除、改名，也不能修改文件数据；如果是目录，只能修改目录下文件的数据，但不能建立和删除文件，root也会受到该限制。a：如果是文件，只能在文件中增加数据，但不能删除也不能修改数据；如果是目录，只能在目录中建立和修改文件，但不能删除）

lsattr -a abc：查看abc文件属性（-a显示所有文件和目录，-d若目标是目录，列出目录本身的属性）
```

### 文件命令

##### 查看、新建

```
ls : 显示当前目录里面的文件及文件夹
ls 目录路径 : 显示路径中目录下的文件及文件夹（路径，绝对、相对都可以）
ls -a : 显示当前目录里面所有文件，包含隐藏类型
ls -l : 列表形式显示文件的详细信息
	-rw-r--r--. 1 root root 3384 8月  28 2018 install.log.syslog
	drwxr-xr-x. 5 root root 4096 8月  31 2018 ziliao1
    第一列：类型，- : 文件，d : 目录，l : 链接，c : 字符设备，b : 块设备
    第二列-第十列：文件权限
    第十一列：没影响，不用管
    第十二列：如果是文件，代表的是硬链接的个数
    第十三列：所属用户   root
    第十四列：所属组     root
    第十五列：文件的大小  单位kb
    第十六列-第十八列：文件创建、修改时间
    第十九列：文件的名字
touch /tmp/love.list：在tmp文件夹下创建love.list文件
touch program files：在当前路径下创建文件program和文件files
touch "program files"：在当前路径下创建文件program files（不建议文件命名包含空格）
```

##### 复制、搜索

```
cp /etc/1.conf /tmp : 将1.conf文件复制到tmp目录下（复制文件）
cp /etc/1.conf /etc/2.conf /tmp : 将1.conf和2.conf文件复制到tmp目录下（复制文件）
cp -p /etc/1.conf /tmp : 将1.conf文件复制到tmp目录下（复制文件，包括文件的所有属性）
find / -name *init* : 根目录搜索名称中包含init的文件（*匹配任意字符，？匹配单个字符）
find /etc -name init : 在etc文件夹下搜索名称为init的文件（区分大小写，参数是-iname不区分大小写）
find / -size +204800 : 在根目录下搜索大于100MB的文件（+n：大于n，-n：小于n，n是数据块，大小为0.5kB）
find / -size +163840 -a -size -204800 : 根目录下搜索大于80MB小于100MB的文件（-a两个条件同时满足，-o满足一个条件即可）
find / -name init* -a -type f：根目录下所搜以init开头的文件（-type类型，f文件，d文件夹，l软链接文件，-inum根据i节点查找）
find /home -user shen：在根目录下搜索所有者为shen的文件（-group根据所属组搜索）
find /etc -cmin -5：在etc下搜索5分钟内被修改过的属性的文件和目录（-mmin文件内容）
find . -name init -exec ls -l {} \.：当前目录搜索名称为init的文件并显示详细信息（-exec表示对搜索结果的操作，ls -l显示详细信息，{} \.是固定格式）

# locate是在资料库中查找，但不能查找新建文件，因为新建文件还没有添加到资料库里面，要查找新建文件，必须输入先命令updatedb来更新资料库（tmp临时文件不在更新范围内），再进行查找就能查找到。
locate init：查找名称为init的文件（精确查找，区分大小写，添加参数-i就不区分大小写）

which ls：查找ls命令所在的目录
whereis rm：查找rm命令所在目录和帮助文档（和which差不多）
grep mysql /root/install.log：在install.log中查找含有mysql的内容（-i不区分大小写）
grep -v ^# /etc/init：查看init文件中不是#开头的文代码行（^以什么开头，#表示注释行）
```

##### 删除

```
rm 1.conf : 删除1.conf文件（有提示）
rm -f 1.conf : 强制删除1.conf文件（没有提示）
rm -rf /* : 强制删除根目录下的所有文件（准备好跑路！！！）
```

### 文件内容命令

##### 查看、查找

```
cat /etc/issue : 查看issue文件内容
cat -n /etc/issue : 查看issue文件内容（附带行号）
more /etc/issue : 分页显示文件内容（空格或F向下翻页，回车下翻一行，q退出）
less /etc/issue : 分页显示文件内容（空格或F向下翻页，回车下翻一行，上下箭头上下翻一行，pageup向上翻页，q退出）
head -n 7 /etc/issue : 查看issue文件的前面7行内容
tail -n 7 /etc/issue : 查看issue文件的最后7行内容
/page : 打开文件后，（斜杠）/page搜索含有page的内容
```

##### 文本编辑器vim

 **Linux自带vi编辑器，vim是增强版的编辑器，但是需要安装才能使用。**

```
yum install vim
```

vim编辑器，有三种模式：

**命令模式（vim init.txt：打开init.txt，就进入命令模式）**
**编辑模式（命令模式下，按i键进入编辑模式，按ESC键，退出编辑模式，进入命令模式）**
**底行模式（命令模式下，输入:（英文冒号）进入底行模式）**

```
    命令模式：a : 在光标所在字符的后一个字符进入编辑模式
    		A : 在光标所在行末尾进入编辑模式
    		i : 在光标所在处进入编辑模式
    		I : 在当前行的第一个非空字符进入编辑模式
    		o : 在光标下新建一行进入编辑模式
    		O : 在光标所在行的上面新建一行进入编辑模式
    		s : 删除当前字符进入编辑模式
    		S : 删除当前行进入编辑模式
    		gg : 快速切换到第一行的行首
            G : 快速切换到最后一行的行首
            ngg : 快速切换到指定行的行首
            ^ : 快速切换到该行行首
            $ : 快速切换到该行行尾
            dd : 删除光标所在行
            u : 撤销操作
            ndd : 删除光标下n行，包含光标所在行
            yy : 复制光标所在行
            p : 粘贴复制的内容
            np : 复制几次
            nyy : 复制光标下n行，包含光标所在行
            4dd : 删除和前切光标下面的4行
		# 翻页
            ctrl + f : 下一页  forward(pagedown键)
            ctrl + b : 上一页  backward(pageup键)
            ctrl + d : 下翻半页 down
            ctrl + u : 上翻半页 up
    底行模式：
    	# 保存
        	输入 :w：保存修改
        	输入 :w /tmp/new_file：另存为tmp下的指定文件
        	输入 :wq：保存并且退出
        	输入 :wq!：强制保存并且退出（文件所有者和root能使用）
        	输入 :q!：不保存，强制退出
    	# 行号
    		输入 :set nu：就会显示行号
        	输入 :set nonu：取消显示行号
        # 跳跃
        	输入 :1000：快速跳到1000行
        # 删除
        	输入 :1000，1002d：删除1000行到1002行
        # 查找
        	输入 :/ftp：查找含有ftp的内容（按n查找下一个）
        # 替换
          光标所在行
            输入 :s/孤单/幸福   将光标所在行的第一个孤单替换为幸福
            输入 :s/孤单/幸福/g   将光标所在行的所有孤单替换为幸福
          指定行
            输入 :n,ms/孤单/幸福  将n到m行第一个孤单替换为幸福
            输入 :n,ms/孤单/幸福/g  将n到m行所有孤单替换为幸福
          所有行
            输入 :%s/ftp/ym	将全文的第一个ftp替换为ym
            输入 :%s/ftp/ym/g	将全文的ftp替换为ym
```

常见错误：非法编辑退出vi的时候，会产生一个 .文件名.后缀名.swp 的交换文件，只要有这个文件存在, 那么打开这个文件的时候就会有提示，不想要这个提示，删除这个文件即可。

```
rm -f .2.txt.swp
vi -r 2.txt   恢复到上次编辑的内容
```

##### 复制、粘贴

```
vim init.log：打开文件init.log
:r /etc/issue：将issue文件的内容，导入init.log文件中
:r !date：将当前时间导入init.log文件中
```

### 文件夹命令

##### 新建、重命名

```
mkdir /tmp/Japan : 创建一个名称为Japan的新文件夹（前提是tmp文件夹存在）
mkdir -p /tmp/Japan : 创建一个名称为Japan的新文件夹（tmp文件夹可以不存在）
mkdir /tmp/Japan /tmp/China : 同时创建名为Japan和China的文件夹（前提是tmp文件夹存在）
mv Japan la : 将Japan更名为la（前提是在同一文件夹下，mv相当于在本文件夹内移动，顺便改名）
```

##### 复制、移动

```
cp -r /tmp/Japan /root : 将Japan目录复制到root目录下（复制目录）
cp -r /tmp/Japan /root/shen : 将Japan目录复制到root目录下并更名为shen（复制目录）
mv /tmp/Japan /root : 将Japan目录移动到root目录下（移动目录）
mv /tmp/Japan /root/la : 将Japan目录移动到root目录下并更名为la（移动目录）
```

##### 删除

```
rmdir /tmp/Japan : 删除Japan目录（只能删除空目录）
rm -r /tem/Japan : 删除Japan文件夹（会提示）
rm -rf /tem/Japan : 强制删除Japan文件夹（没有提示）
```

### 网络命令

##### 消息命令

```
write shen：给用户shen发送信息（前提shen是登录状态，ctrl+D保存结束并发送）
wall hello：给所有在线用户发送一个内容为hello的信息。（广播信息）
```

##### 端口查看

```
netstat：显示网络相关信息（-l监听，-r路由，-n显示IP地址和端口号，-tuln查看监听端口，-an查看所有网络连接（ESTABL LSHED连接状态，发起端口随机，目标端口固定），-rn查看路由表）
```

##### 网络配置

```
ifconfig：查看和设置网卡信息（eth0第一网卡，eth1第二块网卡，lo回环网卡（虚拟））
ifconfig eth0 192.168.8.250：设置虚拟网卡eth0的IP地址为192.168.8.250

setup：设置IP地址（DHCP[*]自动配置IP地址，没有DHCP服务就去掉*，重启network服务生效（service network restart），永久生效）
```

##### 连接测试

```
ping 192.168.1.1：测试与192.168.1.1的IP地址是否网络相通（它会一直ping，ctrl+c停止）
ping -c 4 192.168.1.1：给192.168.1.1的IP地址发送4个数据包
```

##### 挂载

挂载就是给外接设备（U盘）分配一个盘符

```
mkdir /mnt/cdrom：新建一个cdrom文件夹（一般在mnt里面挂载）
mount /dev/sr0 /mnt/cdrom：将设备sr0挂载到cdrom上（sr0默认挂载设备标识）
umount /dev/sr0：取消挂载设备sr0（前提是不在cdrom挂载文件夹内）
```

### 软件包管理

##### 软件包管理简介

```
源码包（c语言写的包，安装慢，效率高，指定位置安装（一般建议在/user/local/下））
二进制包（RPM包、系统默认包（二进制内容），安装快，默认位置安装）
```

##### 依赖性

```
树形依赖：安装a，需要安装b，需要安装c
环形依赖：安装a，需要安装b，需要安装c，需要安装a
模块依赖：依赖查询网站www.rpmfind.net
解决办法：Linux系统centOS，yum命令安装软件（yum会把依赖的包一并装上）
```

##### 安装、升级、卸载

```
# 没有安装的软件包时，使用包全名，而且要注意路径。如果已经安装软件包是，查询、卸载就不用写全名，使用包名就行。

rpm -ivh 包全名：安装软件包（-i安装，-v显示详细信息，-h显示进度，存在依赖性的问题）

rpm -Uvh 包全名（-U：升级）

# 安装和卸载需要加包全名，其他只需要包名
rpm -e 包名（-e：卸载，-q：查询是否安装，-qa：查询所有包，-qi：查询详细信息，-ql：查询包安装位置，-V：查询包文件是否被修改，不用写包全名）

# 网络yum源
vi /etc/yum.repos.d/CentOS-Base.repo：配置网络yum源（软件池）

yum list：查询可用软件包

yum search 关键字：查询服务器上和关键字相关的包

yum -y install 包名：安装软件包（-y：自动回答yes，不存在依赖性的问题，全自动安装依赖包）

yum -y update 包名：升级软件包（-y：自动回答yes，千万要加包名，否则会全部升级，包括内核升级，还会有连接不上等错误）

yum -y remove 包名：卸载软件包（-y：自动回答yes，慎用！它会把依赖包也卸载，有可能导致系统错误）

yum grouplist：列出所有可用的软件组列表

yum grouplist 软件组名：安装指定软件组，组名可以由grouplist查出来（软件组名有空格，则加上引号）

yum groupremove 软件组名：卸载指定软件组

# 安装源码包
# 1.安装C语言编译器（安装gcc）
# 2.网站上，下载源码包http://mirror.bit.edu.cn/
# 3.复制到Linux系统上
# 4.tar -zxvf 包全名：解压安装包，生成软件文件夹
# 5.进入软件文件夹（必须要进入cd）
# 6../configure --prefix=/usr/local/软件名：软件配置与检查和（prefix）设置安装位置
# 7.make：进行编译
# 8.make install：编译安装
/usr/local/软件名 start：启动该软件服务（指定安装路径启动）

rm -rf /usr/local/软件包名：删除该软件包

du -sh 文件夹：可以显示文件夹大小
# 提醒：同一软件，安装了RPM包，还可以安装源码包，因为安装位置不一样，但启动只能启动一个，因为要占用相同的端口（一般不会装两种包）

# 脚本安装包（自动化安装的源码包）
# 1.webmin网页图形Linux管理界面
# 2.网址：http://sourceforge.net/projects/webadmin/files/webmin/
# 3.解压缩，进入压缩目录（tar -zxvf 包全名）
# 4.执行安装脚本（Linux一般的执行脚本以.sh结尾，就直接./setup.sh就开始安装了）
# 提醒：ctrl+退格键（backspace）删除已输入的字符
```

##### 压缩解压命令

```
zip init.zip init：将init文件压缩为init.zip（保留源文件，-r压缩目录）
gzip init：压缩init文件，生成一个init.gz的压缩文件（不保存init文件）
gzip Janpan.tar：压缩Janpan.tar就会生成Japan.tar.gz文件（Janpan.tar就不存在了）
gunzip init.gz：解压缩文件init.gz

tar -cvf Japan.tar Japan：将Japan目录打包压缩为Japan.tar(-c打包，v显示详细信息，f指定文件名，保留源文件及目录)
tar -zcf Japan.tar.gz Japan：将Japan目录直接压缩打包为Japan.tar.gz（打包同时解压缩）
tar -zxf Japan.tar.gz：将Japan.tar.gz解包解压缩（z解压缩，x解包）
tar -cjf Japan.tar.bz2 Japan：压缩Japan生成Japan.tar.bz2文件
tar -xjf Japan.tar.bz2：解压缩Japan.tar.bz2文件

bzip2 -k init：压缩文件init，生成init.bz2（-k保留源文件）
unzip init.zip：解压缩文件init.zip
bunzip2 init.bz2：解压缩文件init.bz2
```

##### 服务命令

```
# 一般服务放在/etc/rc.d/init.d下
/etc/rc.d/init.d/服务名 start：启动该服务（绝对路径启动）

service 服务名 status : 查看项目状态
service 服务名 start : 启动该项目（源码包安装的服务不能用，因为安装位置不同）
service 服务名 restart : 重启该项目
service 服务名 stop : 停止该项目
```

### 链接命令

![软硬链接](F:\Project Notebook\Knowledge\Linux系统\Image\软硬链接.png)

##### 硬链接

```
ln /etc/issue /tmp/study.hard：创建文件issue的硬链接study.hard
    1. study.hard文件和issue文件，内容、大小、属性都一样
    2. study.hard文件能和issue文件同步更新（修改文件任何内容，另一个文件都会更新）
    3. 删除源文件，也能正常运行study.hard文件
    4. 硬链接类似于拷贝
    5. 硬链接文件和源文件i节点一样
    6. 不能跨分区
    7. 不能对目录使用
```

##### 软链接

```
ln -s /etc/issue /tmp/study.soft：创建文件issue的软链接study.soft
    1. study.soft的作用类似于windows的快捷方式，运行study.soft文件就是运行issue文件。
    2. study.soft文件的权限是三个rwx，但归根结底使用权限还是issue文件的权限
    3. study.soft文件很小，它只是一个符号指向，文件详细信息后面有符号指向。
    4. 删除源文件，运行study.soft文件会报错
    5. 可以夸分区
    6. 可以对目录使用
```

### 时间命令

```
date：获取时间
date 031410272014.18：将时间更改为2014年03月14日 10：27：18
```

### 帮助命令

```
man ls：查看ls命令的帮助信息（空格或F向下翻页，回车下翻一行，q退出）
man service：查看配置文件service的帮助信息（前面不要加路径）
whatis ls：看ls命令的简要的帮助信息
ls --help：获取ls命令的选项
```

